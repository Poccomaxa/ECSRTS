//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InputPointerPositionComponent inputPointerPosition { get { return (InputPointerPositionComponent)GetComponent(GameComponentsLookup.InputPointerPosition); } }
    public bool hasInputPointerPosition { get { return HasComponent(GameComponentsLookup.InputPointerPosition); } }

    public void AddInputPointerPosition(UnityEngine.Vector3 newPosition) {
        var index = GameComponentsLookup.InputPointerPosition;
        var component = CreateComponent<InputPointerPositionComponent>(index);
        component.position = newPosition;
        AddComponent(index, component);
    }

    public void ReplaceInputPointerPosition(UnityEngine.Vector3 newPosition) {
        var index = GameComponentsLookup.InputPointerPosition;
        var component = CreateComponent<InputPointerPositionComponent>(index);
        component.position = newPosition;
        ReplaceComponent(index, component);
    }

    public void RemoveInputPointerPosition() {
        RemoveComponent(GameComponentsLookup.InputPointerPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInputPointerPosition;

    public static Entitas.IMatcher<GameEntity> InputPointerPosition {
        get {
            if (_matcherInputPointerPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InputPointerPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInputPointerPosition = matcher;
            }

            return _matcherInputPointerPosition;
        }
    }
}
