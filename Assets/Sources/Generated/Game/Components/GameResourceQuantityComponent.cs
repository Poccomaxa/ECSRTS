//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ResourceQuantity resourceQuantity { get { return (ResourceQuantity)GetComponent(GameComponentsLookup.ResourceQuantity); } }
    public bool hasResourceQuantity { get { return HasComponent(GameComponentsLookup.ResourceQuantity); } }

    public void AddResourceQuantity(int newQuantity) {
        var index = GameComponentsLookup.ResourceQuantity;
        var component = CreateComponent<ResourceQuantity>(index);
        component.quantity = newQuantity;
        AddComponent(index, component);
    }

    public void ReplaceResourceQuantity(int newQuantity) {
        var index = GameComponentsLookup.ResourceQuantity;
        var component = CreateComponent<ResourceQuantity>(index);
        component.quantity = newQuantity;
        ReplaceComponent(index, component);
    }

    public void RemoveResourceQuantity() {
        RemoveComponent(GameComponentsLookup.ResourceQuantity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherResourceQuantity;

    public static Entitas.IMatcher<GameEntity> ResourceQuantity {
        get {
            if (_matcherResourceQuantity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ResourceQuantity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherResourceQuantity = matcher;
            }

            return _matcherResourceQuantity;
        }
    }
}
