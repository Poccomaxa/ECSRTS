//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity playerInventoryEntity { get { return GetGroup(GameMatcher.PlayerInventory).GetSingleEntity(); } }
    public PlayerInventoryComponent playerInventory { get { return playerInventoryEntity.playerInventory; } }
    public bool hasPlayerInventory { get { return playerInventoryEntity != null; } }

    public GameEntity SetPlayerInventory(System.Collections.Generic.Dictionary<GameResource, int> newResourceIndex) {
        if (hasPlayerInventory) {
            throw new Entitas.EntitasException("Could not set PlayerInventory!\n" + this + " already has an entity with PlayerInventoryComponent!",
                "You should check if the context already has a playerInventoryEntity before setting it or use context.ReplacePlayerInventory().");
        }
        var entity = CreateEntity();
        entity.AddPlayerInventory(newResourceIndex);
        return entity;
    }

    public void ReplacePlayerInventory(System.Collections.Generic.Dictionary<GameResource, int> newResourceIndex) {
        var entity = playerInventoryEntity;
        if (entity == null) {
            entity = SetPlayerInventory(newResourceIndex);
        } else {
            entity.ReplacePlayerInventory(newResourceIndex);
        }
    }

    public void RemovePlayerInventory() {
        playerInventoryEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerInventoryComponent playerInventory { get { return (PlayerInventoryComponent)GetComponent(GameComponentsLookup.PlayerInventory); } }
    public bool hasPlayerInventory { get { return HasComponent(GameComponentsLookup.PlayerInventory); } }

    public void AddPlayerInventory(System.Collections.Generic.Dictionary<GameResource, int> newResourceIndex) {
        var index = GameComponentsLookup.PlayerInventory;
        var component = CreateComponent<PlayerInventoryComponent>(index);
        component.resourceIndex = newResourceIndex;
        AddComponent(index, component);
    }

    public void ReplacePlayerInventory(System.Collections.Generic.Dictionary<GameResource, int> newResourceIndex) {
        var index = GameComponentsLookup.PlayerInventory;
        var component = CreateComponent<PlayerInventoryComponent>(index);
        component.resourceIndex = newResourceIndex;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerInventory() {
        RemoveComponent(GameComponentsLookup.PlayerInventory);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerInventory;

    public static Entitas.IMatcher<GameEntity> PlayerInventory {
        get {
            if (_matcherPlayerInventory == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerInventory);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerInventory = matcher;
            }

            return _matcherPlayerInventory;
        }
    }
}
