//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DetectedProximityEntitiesComponent detectedProximityEntities { get { return (DetectedProximityEntitiesComponent)GetComponent(GameComponentsLookup.DetectedProximityEntities); } }
    public bool hasDetectedProximityEntities { get { return HasComponent(GameComponentsLookup.DetectedProximityEntities); } }

    public void AddDetectedProximityEntities(System.Collections.Generic.HashSet<int> newEntities) {
        var index = GameComponentsLookup.DetectedProximityEntities;
        var component = CreateComponent<DetectedProximityEntitiesComponent>(index);
        component.entities = newEntities;
        AddComponent(index, component);
    }

    public void ReplaceDetectedProximityEntities(System.Collections.Generic.HashSet<int> newEntities) {
        var index = GameComponentsLookup.DetectedProximityEntities;
        var component = CreateComponent<DetectedProximityEntitiesComponent>(index);
        component.entities = newEntities;
        ReplaceComponent(index, component);
    }

    public void RemoveDetectedProximityEntities() {
        RemoveComponent(GameComponentsLookup.DetectedProximityEntities);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDetectedProximityEntities;

    public static Entitas.IMatcher<GameEntity> DetectedProximityEntities {
        get {
            if (_matcherDetectedProximityEntities == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DetectedProximityEntities);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDetectedProximityEntities = matcher;
            }

            return _matcherDetectedProximityEntities;
        }
    }
}
