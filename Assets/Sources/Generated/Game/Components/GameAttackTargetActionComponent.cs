//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AttackTargetActionComponent attackTargetAction { get { return (AttackTargetActionComponent)GetComponent(GameComponentsLookup.AttackTargetAction); } }
    public bool hasAttackTargetAction { get { return HasComponent(GameComponentsLookup.AttackTargetAction); } }

    public void AddAttackTargetAction(int newAttackerId, int newTargetId) {
        var index = GameComponentsLookup.AttackTargetAction;
        var component = CreateComponent<AttackTargetActionComponent>(index);
        component.attackerId = newAttackerId;
        component.targetId = newTargetId;
        AddComponent(index, component);
    }

    public void ReplaceAttackTargetAction(int newAttackerId, int newTargetId) {
        var index = GameComponentsLookup.AttackTargetAction;
        var component = CreateComponent<AttackTargetActionComponent>(index);
        component.attackerId = newAttackerId;
        component.targetId = newTargetId;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackTargetAction() {
        RemoveComponent(GameComponentsLookup.AttackTargetAction);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAttackTargetAction;

    public static Entitas.IMatcher<GameEntity> AttackTargetAction {
        get {
            if (_matcherAttackTargetAction == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AttackTargetAction);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAttackTargetAction = matcher;
            }

            return _matcherAttackTargetAction;
        }
    }
}
