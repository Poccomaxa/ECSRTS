//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public NavigationObstacleComponent navigationObstacle { get { return (NavigationObstacleComponent)GetComponent(GameComponentsLookup.NavigationObstacle); } }
    public bool hasNavigationObstacle { get { return HasComponent(GameComponentsLookup.NavigationObstacle); } }

    public void AddNavigationObstacle(UnityEngine.AI.NavMeshObstacle newObstacle) {
        var index = GameComponentsLookup.NavigationObstacle;
        var component = CreateComponent<NavigationObstacleComponent>(index);
        component.obstacle = newObstacle;
        AddComponent(index, component);
    }

    public void ReplaceNavigationObstacle(UnityEngine.AI.NavMeshObstacle newObstacle) {
        var index = GameComponentsLookup.NavigationObstacle;
        var component = CreateComponent<NavigationObstacleComponent>(index);
        component.obstacle = newObstacle;
        ReplaceComponent(index, component);
    }

    public void RemoveNavigationObstacle() {
        RemoveComponent(GameComponentsLookup.NavigationObstacle);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNavigationObstacle;

    public static Entitas.IMatcher<GameEntity> NavigationObstacle {
        get {
            if (_matcherNavigationObstacle == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.NavigationObstacle);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNavigationObstacle = matcher;
            }

            return _matcherNavigationObstacle;
        }
    }
}
