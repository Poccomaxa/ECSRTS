//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public NavigationDebugComponent navigationDebug { get { return (NavigationDebugComponent)GetComponent(GameComponentsLookup.NavigationDebug); } }
    public bool hasNavigationDebug { get { return HasComponent(GameComponentsLookup.NavigationDebug); } }

    public void AddNavigationDebug(float newDistanceLeft, UnityEngine.AI.NavMeshPathStatus newStatus) {
        var index = GameComponentsLookup.NavigationDebug;
        var component = CreateComponent<NavigationDebugComponent>(index);
        component.distanceLeft = newDistanceLeft;
        component.status = newStatus;
        AddComponent(index, component);
    }

    public void ReplaceNavigationDebug(float newDistanceLeft, UnityEngine.AI.NavMeshPathStatus newStatus) {
        var index = GameComponentsLookup.NavigationDebug;
        var component = CreateComponent<NavigationDebugComponent>(index);
        component.distanceLeft = newDistanceLeft;
        component.status = newStatus;
        ReplaceComponent(index, component);
    }

    public void RemoveNavigationDebug() {
        RemoveComponent(GameComponentsLookup.NavigationDebug);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNavigationDebug;

    public static Entitas.IMatcher<GameEntity> NavigationDebug {
        get {
            if (_matcherNavigationDebug == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.NavigationDebug);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNavigationDebug = matcher;
            }

            return _matcherNavigationDebug;
        }
    }
}
